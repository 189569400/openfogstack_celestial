/*
* This file is part of Celestial (https://github.com/OpenFogStack/celestial).
* Copyright (c) 2021 Tobias Pfandzelter, The OpenFogStack Team.
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, version 3.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
**/

syntax = "proto3";

package openfogstack.celestial.database;
option go_package = ".;database";
import "google/protobuf/timestamp.proto";

service Database {
  rpc Constellation(Empty) returns (ConstellationInfo);
  rpc Shell(ShellRequest) returns (ShellInfo);
  rpc Satellite(SatelliteId) returns (SatelliteInfo);
  rpc GroundStation(GroundStationId) returns (GroundStationInfo);
  rpc Path(PathRequest) returns (PathInfo);
}

message Empty {}

message ConstellationInfo {
  string model = 1;
  uint32 shells = 2;
  repeated GroundStationId groundstations = 3;
}

message ShellRequest { uint32 shell = 1; }

message SGP4Options {
  google.protobuf.Timestamp starttime = 1;
  string model = 2;
  string mode = 3;
  double bstar = 4;
  double ndot = 5;
  double argpo = 6;
}

message NetworkConfig {
  uint32 bandwidth = 1;
  double islpropagation = 2;
  uint32 mincommsaltitude = 3;
  double minelevation = 4;
  double gstpropagation = 5;
  string groundstationconnectiontype = 6;
}

message ComputeConfig {
  uint32 vcpu = 1;
  uint32 mem = 2;
  bool ht = 3;
  uint32 disk = 4;
  string kernel = 5;
  string rootfs = 6;
}

message ShellInfo {
  uint32 planes = 1;
  uint32 sats = 2;
  double altitude = 3;
  double inclination = 4;
  double arcofascendingsnodes = 5;
  double eccentricity = 6;
  repeated SatelliteId activeSats = 7;
  NetworkConfig network = 8;
  ComputeConfig compute = 9;
  optional SGP4Options sgp4 = 10;
}

message SatelliteId {
  uint32 shell = 1;
  uint32 sat = 2;
}

message Pos {
  double x = 1;
  double y = 2;
  double z = 3;
}

message SatelliteInfo {
  Pos position = 1;
  bool active = 2;
  repeated ConnectedSatInfo connectedSats = 3;
  repeated GroundStationId connectedGST = 4;
}

message ConnectedSatInfo {
  SatelliteId sat = 1;
  double distance = 2;
  double delay = 3;
  double bandwidth = 4;
}

message ConnectedGSTInfo {
    GroundStationId gst = 1;
    double distance = 2;
    double delay = 3;
    double bandwidth = 4;
  }

message GroundStationId { string name = 1; }

message GroundStationInfo {
  Pos position = 1;
  double latitude = 2;
  double longitude = 3;
  NetworkConfig network = 4;
  ComputeConfig compute = 5;
  repeated ConnectedSatInfo connectedSats = 6;
}

message Segment {
  int32 sourceShell = 1;
  uint32 sourceSat = 2;
  int32 targetShell = 3;
  uint32 targetSat = 4;
  double delay = 5;
  double distance = 6;
  double bandwidth = 7;
}

message PathRequest {
  int32 sourceShell = 1;
  uint32 sourceSat = 2;
  int32 targetShell = 3;
  uint32 targetSat = 4;
}

message PathInfo { repeated Path paths = 1; }

message Path {
  double distance = 1;
  double delay = 2;
  double bandwidth = 3;
  repeated Segment segments = 4;
}
