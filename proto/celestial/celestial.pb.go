//
// This file is part of Celestial (https://github.com/OpenFogStack/celestial).
// Copyright (c) 2021 Tobias Pfandzelter, The OpenFogStack Team.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, version 3.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.3
// source: celestial.proto

package celestial

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{0}
}

type HostInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu uint64 `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Mem uint64 `protobuf:"varint,2,opt,name=mem,proto3" json:"mem,omitempty"`
}

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{1}
}

func (x *HostInfo) GetCpu() uint64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *HostInfo) GetMem() uint64 {
	if x != nil {
		return x.Mem
	}
	return 0
}

type ReadyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready   bool   `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	Created uint64 `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *ReadyInfo) Reset() {
	*x = ReadyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyInfo) ProtoMessage() {}

func (x *ReadyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyInfo.ProtoReflect.Descriptor instead.
func (*ReadyInfo) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{2}
}

func (x *ReadyInfo) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *ReadyInfo) GetCreated() uint64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type Shell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Planes uint64 `protobuf:"varint,2,opt,name=planes,proto3" json:"planes,omitempty"`
}

func (x *Shell) Reset() {
	*x = Shell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shell) ProtoMessage() {}

func (x *Shell) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shell.ProtoReflect.Descriptor instead.
func (*Shell) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{3}
}

func (x *Shell) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Shell) GetPlanes() uint64 {
	if x != nil {
		return x.Planes
	}
	return 0
}

type InitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database     bool     `protobuf:"varint,1,opt,name=database,proto3" json:"database,omitempty"`
	DatabaseHost string   `protobuf:"bytes,2,opt,name=databaseHost,proto3" json:"databaseHost,omitempty"`
	Shellcount   uint64   `protobuf:"varint,3,opt,name=shellcount,proto3" json:"shellcount,omitempty"`
	Shells       []*Shell `protobuf:"bytes,4,rep,name=shells,proto3" json:"shells,omitempty"`
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{4}
}

func (x *InitRequest) GetDatabase() bool {
	if x != nil {
		return x.Database
	}
	return false
}

func (x *InitRequest) GetDatabaseHost() string {
	if x != nil {
		return x.DatabaseHost
	}
	return ""
}

func (x *InitRequest) GetShellcount() uint64 {
	if x != nil {
		return x.Shellcount
	}
	return 0
}

func (x *InitRequest) GetShells() []*Shell {
	if x != nil {
		return x.Shells
	}
	return nil
}

type RemoteHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Addr  string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *RemoteHost) Reset() {
	*x = RemoteHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteHost) ProtoMessage() {}

func (x *RemoteHost) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteHost.ProtoReflect.Descriptor instead.
func (*RemoteHost) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{5}
}

func (x *RemoteHost) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *RemoteHost) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type InitRemotesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index       uint64        `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Remotehosts []*RemoteHost `protobuf:"bytes,2,rep,name=remotehosts,proto3" json:"remotehosts,omitempty"`
}

func (x *InitRemotesRequest) Reset() {
	*x = InitRemotesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitRemotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRemotesRequest) ProtoMessage() {}

func (x *InitRemotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRemotesRequest.ProtoReflect.Descriptor instead.
func (*InitRemotesRequest) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{6}
}

func (x *InitRemotesRequest) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *InitRemotesRequest) GetRemotehosts() []*RemoteHost {
	if x != nil {
		return x.Remotehosts
	}
	return nil
}

type Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// allow -1 for ground stations
	Shell int64  `protobuf:"varint,1,opt,name=shell,proto3" json:"shell,omitempty"`
	Id    uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// name is only used for ground stations
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Machine) Reset() {
	*x = Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine.ProtoReflect.Descriptor instead.
func (*Machine) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{7}
}

func (x *Machine) GetShell() int64 {
	if x != nil {
		return x.Shell
	}
	return 0
}

func (x *Machine) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Machine) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FirecrackerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vcpu       uint64 `protobuf:"varint,1,opt,name=vcpu,proto3" json:"vcpu,omitempty"`
	Mem        uint64 `protobuf:"varint,2,opt,name=mem,proto3" json:"mem,omitempty"`
	Ht         bool   `protobuf:"varint,3,opt,name=ht,proto3" json:"ht,omitempty"`
	Kernel     string `protobuf:"bytes,4,opt,name=kernel,proto3" json:"kernel,omitempty"`
	Rootfs     string `protobuf:"bytes,5,opt,name=rootfs,proto3" json:"rootfs,omitempty"`
	Bootparams string `protobuf:"bytes,6,opt,name=bootparams,proto3" json:"bootparams,omitempty"`
}

func (x *FirecrackerConfig) Reset() {
	*x = FirecrackerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirecrackerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirecrackerConfig) ProtoMessage() {}

func (x *FirecrackerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirecrackerConfig.ProtoReflect.Descriptor instead.
func (*FirecrackerConfig) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{8}
}

func (x *FirecrackerConfig) GetVcpu() uint64 {
	if x != nil {
		return x.Vcpu
	}
	return 0
}

func (x *FirecrackerConfig) GetMem() uint64 {
	if x != nil {
		return x.Mem
	}
	return 0
}

func (x *FirecrackerConfig) GetHt() bool {
	if x != nil {
		return x.Ht
	}
	return false
}

func (x *FirecrackerConfig) GetKernel() string {
	if x != nil {
		return x.Kernel
	}
	return ""
}

func (x *FirecrackerConfig) GetRootfs() string {
	if x != nil {
		return x.Rootfs
	}
	return ""
}

func (x *FirecrackerConfig) GetBootparams() string {
	if x != nil {
		return x.Bootparams
	}
	return ""
}

type NetworkConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bandwidth uint64 `protobuf:"varint,1,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
}

func (x *NetworkConfig) Reset() {
	*x = NetworkConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfig) ProtoMessage() {}

func (x *NetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfig.ProtoReflect.Descriptor instead.
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{9}
}

func (x *NetworkConfig) GetBandwidth() uint64 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

type CreateMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine           *Machine           `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Firecrackerconfig *FirecrackerConfig `protobuf:"bytes,2,opt,name=firecrackerconfig,proto3" json:"firecrackerconfig,omitempty"`
	Networkconfig     *NetworkConfig     `protobuf:"bytes,3,opt,name=networkconfig,proto3" json:"networkconfig,omitempty"`
	Status            bool               `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateMachineRequest) Reset() {
	*x = CreateMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMachineRequest) ProtoMessage() {}

func (x *CreateMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMachineRequest.ProtoReflect.Descriptor instead.
func (*CreateMachineRequest) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{10}
}

func (x *CreateMachineRequest) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *CreateMachineRequest) GetFirecrackerconfig() *FirecrackerConfig {
	if x != nil {
		return x.Firecrackerconfig
	}
	return nil
}

func (x *CreateMachineRequest) GetNetworkconfig() *NetworkConfig {
	if x != nil {
		return x.Networkconfig
	}
	return nil
}

func (x *CreateMachineRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type CreateRemoteMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine       *Machine       `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Networkconfig *NetworkConfig `protobuf:"bytes,3,opt,name=networkconfig,proto3" json:"networkconfig,omitempty"`
}

func (x *CreateRemoteMachineRequest) Reset() {
	*x = CreateRemoteMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRemoteMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRemoteMachineRequest) ProtoMessage() {}

func (x *CreateRemoteMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRemoteMachineRequest.ProtoReflect.Descriptor instead.
func (*CreateRemoteMachineRequest) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{11}
}

func (x *CreateRemoteMachineRequest) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *CreateRemoteMachineRequest) GetNetworkconfig() *NetworkConfig {
	if x != nil {
		return x.Networkconfig
	}
	return nil
}

type ModifyMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Status  bool     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ModifyMachineRequest) Reset() {
	*x = ModifyMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMachineRequest) ProtoMessage() {}

func (x *ModifyMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMachineRequest.ProtoReflect.Descriptor instead.
func (*ModifyMachineRequest) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{12}
}

func (x *ModifyMachineRequest) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *ModifyMachineRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ModifyLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A      *Machine             `protobuf:"bytes,1,opt,name=a,proto3" json:"a,omitempty"`
	Remove []*RemoveLinkRequest `protobuf:"bytes,2,rep,name=remove,proto3" json:"remove,omitempty"`
	Modify []*ModifyLinkRequest `protobuf:"bytes,3,rep,name=modify,proto3" json:"modify,omitempty"`
}

func (x *ModifyLinksRequest) Reset() {
	*x = ModifyLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLinksRequest) ProtoMessage() {}

func (x *ModifyLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLinksRequest.ProtoReflect.Descriptor instead.
func (*ModifyLinksRequest) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{13}
}

func (x *ModifyLinksRequest) GetA() *Machine {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *ModifyLinksRequest) GetRemove() []*RemoveLinkRequest {
	if x != nil {
		return x.Remove
	}
	return nil
}

func (x *ModifyLinksRequest) GetModify() []*ModifyLinkRequest {
	if x != nil {
		return x.Modify
	}
	return nil
}

type RemoveLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B *Machine `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"`
}

func (x *RemoveLinkRequest) Reset() {
	*x = RemoveLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLinkRequest) ProtoMessage() {}

func (x *RemoveLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLinkRequest.ProtoReflect.Descriptor instead.
func (*RemoveLinkRequest) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{14}
}

func (x *RemoveLinkRequest) GetB() *Machine {
	if x != nil {
		return x.B
	}
	return nil
}

type ModifyLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B         *Machine `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"`
	Latency   float64  `protobuf:"fixed64,3,opt,name=latency,proto3" json:"latency,omitempty"`
	Bandwidth uint64   `protobuf:"varint,4,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
}

func (x *ModifyLinkRequest) Reset() {
	*x = ModifyLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_celestial_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLinkRequest) ProtoMessage() {}

func (x *ModifyLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_celestial_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLinkRequest.ProtoReflect.Descriptor instead.
func (*ModifyLinkRequest) Descriptor() ([]byte, []int) {
	return file_celestial_proto_rawDescGZIP(), []int{15}
}

func (x *ModifyLinkRequest) GetB() *Machine {
	if x != nil {
		return x.B
	}
	return nil
}

func (x *ModifyLinkRequest) GetLatency() float64 {
	if x != nil {
		return x.Latency
	}
	return 0
}

func (x *ModifyLinkRequest) GetBandwidth() uint64 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

var File_celestial_proto protoreflect.FileDescriptor

var file_celestial_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x20, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e,
	0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74,
	0x69, 0x61, 0x6c, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2e, 0x0a, 0x08,
	0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6d, 0x65, 0x6d, 0x22, 0x3b, 0x0a, 0x09,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x2f, 0x0a, 0x05, 0x53, 0x68, 0x65,
	0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x0b, 0x49,
	0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68,
	0x65, 0x6c, 0x6c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x73, 0x68, 0x65, 0x6c, 0x6c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x68,
	0x65, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74,
	0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x68,
	0x65, 0x6c, 0x6c, 0x52, 0x06, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0x36, 0x0a, 0x0a, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x22, 0x7a, 0x0a, 0x12, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x4e, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65,
	0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x22,
	0x43, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68,
	0x65, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x68, 0x65, 0x6c, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x46, 0x69, 0x72, 0x65, 0x63, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x63,
	0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x76, 0x63, 0x70, 0x75, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6d, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x68, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x74,
	0x66, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x66, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x22, 0x2d, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22,
	0xad, 0x02, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69,
	0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x61, 0x0a,
	0x11, 0x66, 0x69, 0x72, 0x65, 0x63, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61,
	0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x69, 0x72, 0x65,
	0x63, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x66,
	0x69, 0x72, 0x65, 0x63, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x55, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f,
	0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c,
	0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xb8, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43,
	0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63,
	0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69,
	0x61, 0x6c, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x12, 0x55, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74,
	0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x73, 0x0a, 0x14, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x43, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c,
	0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xe7, 0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x01, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73,
	0x74, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x01, 0x61, 0x12,
	0x4b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63,
	0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69,
	0x61, 0x6c, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x4b, 0x0a, 0x06,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65,
	0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x22, 0x4c, 0x0a, 0x11, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37,
	0x0a, 0x01, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69,
	0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x52, 0x01, 0x62, 0x22, 0x84, 0x01, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x01, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61,
	0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x52, 0x01, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x32, 0xd4,
	0x06, 0x0a, 0x09, 0x43, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x62, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73,
	0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65,
	0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x61, 0x0a, 0x09, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x27, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c,
	0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e,
	0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x5e, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x2d, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73,
	0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74,
	0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x6c, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x73, 0x12, 0x34, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65,
	0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61,
	0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x60, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x65, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73,
	0x74, 0x69, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74,
	0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x70, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x12, 0x36, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65,
	0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65,
	0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x70, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x36, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e,
	0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65,
	0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61,
	0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6c, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x34, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e,
	0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65,
	0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x3b, 0x63, 0x65, 0x6c, 0x65, 0x73,
	0x74, 0x69, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_celestial_proto_rawDescOnce sync.Once
	file_celestial_proto_rawDescData = file_celestial_proto_rawDesc
)

func file_celestial_proto_rawDescGZIP() []byte {
	file_celestial_proto_rawDescOnce.Do(func() {
		file_celestial_proto_rawDescData = protoimpl.X.CompressGZIP(file_celestial_proto_rawDescData)
	})
	return file_celestial_proto_rawDescData
}

var file_celestial_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_celestial_proto_goTypes = []interface{}{
	(*Empty)(nil),                      // 0: openfogstack.celestial.celestial.Empty
	(*HostInfo)(nil),                   // 1: openfogstack.celestial.celestial.HostInfo
	(*ReadyInfo)(nil),                  // 2: openfogstack.celestial.celestial.ReadyInfo
	(*Shell)(nil),                      // 3: openfogstack.celestial.celestial.Shell
	(*InitRequest)(nil),                // 4: openfogstack.celestial.celestial.InitRequest
	(*RemoteHost)(nil),                 // 5: openfogstack.celestial.celestial.RemoteHost
	(*InitRemotesRequest)(nil),         // 6: openfogstack.celestial.celestial.InitRemotesRequest
	(*Machine)(nil),                    // 7: openfogstack.celestial.celestial.Machine
	(*FirecrackerConfig)(nil),          // 8: openfogstack.celestial.celestial.FirecrackerConfig
	(*NetworkConfig)(nil),              // 9: openfogstack.celestial.celestial.NetworkConfig
	(*CreateMachineRequest)(nil),       // 10: openfogstack.celestial.celestial.CreateMachineRequest
	(*CreateRemoteMachineRequest)(nil), // 11: openfogstack.celestial.celestial.CreateRemoteMachineRequest
	(*ModifyMachineRequest)(nil),       // 12: openfogstack.celestial.celestial.ModifyMachineRequest
	(*ModifyLinksRequest)(nil),         // 13: openfogstack.celestial.celestial.ModifyLinksRequest
	(*RemoveLinkRequest)(nil),          // 14: openfogstack.celestial.celestial.RemoveLinkRequest
	(*ModifyLinkRequest)(nil),          // 15: openfogstack.celestial.celestial.ModifyLinkRequest
}
var file_celestial_proto_depIdxs = []int32{
	3,  // 0: openfogstack.celestial.celestial.InitRequest.shells:type_name -> openfogstack.celestial.celestial.Shell
	5,  // 1: openfogstack.celestial.celestial.InitRemotesRequest.remotehosts:type_name -> openfogstack.celestial.celestial.RemoteHost
	7,  // 2: openfogstack.celestial.celestial.CreateMachineRequest.machine:type_name -> openfogstack.celestial.celestial.Machine
	8,  // 3: openfogstack.celestial.celestial.CreateMachineRequest.firecrackerconfig:type_name -> openfogstack.celestial.celestial.FirecrackerConfig
	9,  // 4: openfogstack.celestial.celestial.CreateMachineRequest.networkconfig:type_name -> openfogstack.celestial.celestial.NetworkConfig
	7,  // 5: openfogstack.celestial.celestial.CreateRemoteMachineRequest.machine:type_name -> openfogstack.celestial.celestial.Machine
	9,  // 6: openfogstack.celestial.celestial.CreateRemoteMachineRequest.networkconfig:type_name -> openfogstack.celestial.celestial.NetworkConfig
	7,  // 7: openfogstack.celestial.celestial.ModifyMachineRequest.machine:type_name -> openfogstack.celestial.celestial.Machine
	7,  // 8: openfogstack.celestial.celestial.ModifyLinksRequest.a:type_name -> openfogstack.celestial.celestial.Machine
	14, // 9: openfogstack.celestial.celestial.ModifyLinksRequest.remove:type_name -> openfogstack.celestial.celestial.RemoveLinkRequest
	15, // 10: openfogstack.celestial.celestial.ModifyLinksRequest.modify:type_name -> openfogstack.celestial.celestial.ModifyLinkRequest
	7,  // 11: openfogstack.celestial.celestial.RemoveLinkRequest.b:type_name -> openfogstack.celestial.celestial.Machine
	7,  // 12: openfogstack.celestial.celestial.ModifyLinkRequest.b:type_name -> openfogstack.celestial.celestial.Machine
	0,  // 13: openfogstack.celestial.celestial.Celestial.GetHostInfo:input_type -> openfogstack.celestial.celestial.Empty
	0,  // 14: openfogstack.celestial.celestial.Celestial.HostReady:input_type -> openfogstack.celestial.celestial.Empty
	4,  // 15: openfogstack.celestial.celestial.Celestial.Init:input_type -> openfogstack.celestial.celestial.InitRequest
	6,  // 16: openfogstack.celestial.celestial.Celestial.InitRemotes:input_type -> openfogstack.celestial.celestial.InitRemotesRequest
	0,  // 17: openfogstack.celestial.celestial.Celestial.StartPeering:input_type -> openfogstack.celestial.celestial.Empty
	10, // 18: openfogstack.celestial.celestial.Celestial.CreateMachine:input_type -> openfogstack.celestial.celestial.CreateMachineRequest
	12, // 19: openfogstack.celestial.celestial.Celestial.ModifyMachine:input_type -> openfogstack.celestial.celestial.ModifyMachineRequest
	13, // 20: openfogstack.celestial.celestial.Celestial.ModifyLinks:input_type -> openfogstack.celestial.celestial.ModifyLinksRequest
	1,  // 21: openfogstack.celestial.celestial.Celestial.GetHostInfo:output_type -> openfogstack.celestial.celestial.HostInfo
	2,  // 22: openfogstack.celestial.celestial.Celestial.HostReady:output_type -> openfogstack.celestial.celestial.ReadyInfo
	0,  // 23: openfogstack.celestial.celestial.Celestial.Init:output_type -> openfogstack.celestial.celestial.Empty
	0,  // 24: openfogstack.celestial.celestial.Celestial.InitRemotes:output_type -> openfogstack.celestial.celestial.Empty
	0,  // 25: openfogstack.celestial.celestial.Celestial.StartPeering:output_type -> openfogstack.celestial.celestial.Empty
	0,  // 26: openfogstack.celestial.celestial.Celestial.CreateMachine:output_type -> openfogstack.celestial.celestial.Empty
	0,  // 27: openfogstack.celestial.celestial.Celestial.ModifyMachine:output_type -> openfogstack.celestial.celestial.Empty
	0,  // 28: openfogstack.celestial.celestial.Celestial.ModifyLinks:output_type -> openfogstack.celestial.celestial.Empty
	21, // [21:29] is the sub-list for method output_type
	13, // [13:21] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_celestial_proto_init() }
func file_celestial_proto_init() {
	if File_celestial_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_celestial_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_celestial_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_celestial_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_celestial_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_celestial_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_celestial_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_celestial_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitRemotesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_celestial_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_celestial_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirecrackerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_celestial_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_celestial_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_celestial_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRemoteMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_celestial_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_celestial_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_celestial_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_celestial_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_celestial_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_celestial_proto_goTypes,
		DependencyIndexes: file_celestial_proto_depIdxs,
		MessageInfos:      file_celestial_proto_msgTypes,
	}.Build()
	File_celestial_proto = out.File
	file_celestial_proto_rawDesc = nil
	file_celestial_proto_goTypes = nil
	file_celestial_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CelestialClient is the client API for Celestial service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CelestialClient interface {
	GetHostInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*HostInfo, error)
	HostReady(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ReadyInfo, error)
	Init(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*Empty, error)
	InitRemotes(ctx context.Context, in *InitRemotesRequest, opts ...grpc.CallOption) (*Empty, error)
	StartPeering(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	CreateMachine(ctx context.Context, in *CreateMachineRequest, opts ...grpc.CallOption) (*Empty, error)
	ModifyMachine(ctx context.Context, in *ModifyMachineRequest, opts ...grpc.CallOption) (*Empty, error)
	ModifyLinks(ctx context.Context, in *ModifyLinksRequest, opts ...grpc.CallOption) (*Empty, error)
}

type celestialClient struct {
	cc grpc.ClientConnInterface
}

func NewCelestialClient(cc grpc.ClientConnInterface) CelestialClient {
	return &celestialClient{cc}
}

func (c *celestialClient) GetHostInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*HostInfo, error) {
	out := new(HostInfo)
	err := c.cc.Invoke(ctx, "/openfogstack.celestial.celestial.Celestial/GetHostInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *celestialClient) HostReady(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ReadyInfo, error) {
	out := new(ReadyInfo)
	err := c.cc.Invoke(ctx, "/openfogstack.celestial.celestial.Celestial/HostReady", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *celestialClient) Init(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/openfogstack.celestial.celestial.Celestial/Init", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *celestialClient) InitRemotes(ctx context.Context, in *InitRemotesRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/openfogstack.celestial.celestial.Celestial/InitRemotes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *celestialClient) StartPeering(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/openfogstack.celestial.celestial.Celestial/StartPeering", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *celestialClient) CreateMachine(ctx context.Context, in *CreateMachineRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/openfogstack.celestial.celestial.Celestial/CreateMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *celestialClient) ModifyMachine(ctx context.Context, in *ModifyMachineRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/openfogstack.celestial.celestial.Celestial/ModifyMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *celestialClient) ModifyLinks(ctx context.Context, in *ModifyLinksRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/openfogstack.celestial.celestial.Celestial/ModifyLinks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CelestialServer is the server API for Celestial service.
type CelestialServer interface {
	GetHostInfo(context.Context, *Empty) (*HostInfo, error)
	HostReady(context.Context, *Empty) (*ReadyInfo, error)
	Init(context.Context, *InitRequest) (*Empty, error)
	InitRemotes(context.Context, *InitRemotesRequest) (*Empty, error)
	StartPeering(context.Context, *Empty) (*Empty, error)
	CreateMachine(context.Context, *CreateMachineRequest) (*Empty, error)
	ModifyMachine(context.Context, *ModifyMachineRequest) (*Empty, error)
	ModifyLinks(context.Context, *ModifyLinksRequest) (*Empty, error)
}

// UnimplementedCelestialServer can be embedded to have forward compatible implementations.
type UnimplementedCelestialServer struct {
}

func (*UnimplementedCelestialServer) GetHostInfo(context.Context, *Empty) (*HostInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHostInfo not implemented")
}
func (*UnimplementedCelestialServer) HostReady(context.Context, *Empty) (*ReadyInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HostReady not implemented")
}
func (*UnimplementedCelestialServer) Init(context.Context, *InitRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Init not implemented")
}
func (*UnimplementedCelestialServer) InitRemotes(context.Context, *InitRemotesRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitRemotes not implemented")
}
func (*UnimplementedCelestialServer) StartPeering(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartPeering not implemented")
}
func (*UnimplementedCelestialServer) CreateMachine(context.Context, *CreateMachineRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMachine not implemented")
}
func (*UnimplementedCelestialServer) ModifyMachine(context.Context, *ModifyMachineRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyMachine not implemented")
}
func (*UnimplementedCelestialServer) ModifyLinks(context.Context, *ModifyLinksRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyLinks not implemented")
}

func RegisterCelestialServer(s *grpc.Server, srv CelestialServer) {
	s.RegisterService(&_Celestial_serviceDesc, srv)
}

func _Celestial_GetHostInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CelestialServer).GetHostInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openfogstack.celestial.celestial.Celestial/GetHostInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CelestialServer).GetHostInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Celestial_HostReady_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CelestialServer).HostReady(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openfogstack.celestial.celestial.Celestial/HostReady",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CelestialServer).HostReady(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Celestial_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CelestialServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openfogstack.celestial.celestial.Celestial/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CelestialServer).Init(ctx, req.(*InitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Celestial_InitRemotes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitRemotesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CelestialServer).InitRemotes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openfogstack.celestial.celestial.Celestial/InitRemotes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CelestialServer).InitRemotes(ctx, req.(*InitRemotesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Celestial_StartPeering_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CelestialServer).StartPeering(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openfogstack.celestial.celestial.Celestial/StartPeering",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CelestialServer).StartPeering(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Celestial_CreateMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CelestialServer).CreateMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openfogstack.celestial.celestial.Celestial/CreateMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CelestialServer).CreateMachine(ctx, req.(*CreateMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Celestial_ModifyMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CelestialServer).ModifyMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openfogstack.celestial.celestial.Celestial/ModifyMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CelestialServer).ModifyMachine(ctx, req.(*ModifyMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Celestial_ModifyLinks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyLinksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CelestialServer).ModifyLinks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openfogstack.celestial.celestial.Celestial/ModifyLinks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CelestialServer).ModifyLinks(ctx, req.(*ModifyLinksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Celestial_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openfogstack.celestial.celestial.Celestial",
	HandlerType: (*CelestialServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHostInfo",
			Handler:    _Celestial_GetHostInfo_Handler,
		},
		{
			MethodName: "HostReady",
			Handler:    _Celestial_HostReady_Handler,
		},
		{
			MethodName: "Init",
			Handler:    _Celestial_Init_Handler,
		},
		{
			MethodName: "InitRemotes",
			Handler:    _Celestial_InitRemotes_Handler,
		},
		{
			MethodName: "StartPeering",
			Handler:    _Celestial_StartPeering_Handler,
		},
		{
			MethodName: "CreateMachine",
			Handler:    _Celestial_CreateMachine_Handler,
		},
		{
			MethodName: "ModifyMachine",
			Handler:    _Celestial_ModifyMachine_Handler,
		},
		{
			MethodName: "ModifyLinks",
			Handler:    _Celestial_ModifyLinks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "celestial.proto",
}
